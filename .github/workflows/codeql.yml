name: "CodeQL"

on:
  push:
    branches: [ main, release/* ]
  pull_request:
    branches: [ main, release/* ]
  workflow_dispatch:
  
jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
  
    strategy:
      fail-fast: false
      matrix:
        language: [ 'swift' ]
        
    env:
      GOBIN: ${{ github.workspace }}/bin
      GITHUB_TOKEN: ${{ secrets.REPO_PAT }}

  SwiftLint:
   runs-on: ubuntu-latest
   steps:
     - uses: actions/checkout@v1
     - name: SwiftLint 
       uses: norio-nomura/action-swiftlint@3.2.1
       env:
         DIFF_BASE: ${{ github.base_ref }}
       with:
          args: --config .swiftlint.yml
  xcode-build:
    name: Xcode Build
    runs-on: macOS-latest
    timeout-minutes: 30

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        path: ./

    - name: Select Xcode 13
      run: sudo xcode-select --switch /Applications/Xcode_13.3.app/Contents/Developer

    - name: Prepare iOS 13 Simulator
      run: sudo mkdir -p /Library/Developer/CoreSimulator/Profiles/Runtimes
           sudo ln -s /Applications/Xcode_11.7.app/Contents/Developer/Platforms/iPhoneOS.platform/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS.simruntime /Library/Developer/CoreSimulator/Profiles/Runtimes/iOS\ 13.6.simruntime
           xcrun simctl list runtimes
        
    - name: Print Environment Variables
      run: |
        echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
        echo "GITHUB_REPOSITORY: $GITHUB_REPOSITORY"
        echo "GOPATH: $GOPATH"
        
    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}

    - name: Build
      run: xcodebuild clean -workspace .swiftpm/xcode/package.xcworkspace -scheme Skyflow -enableCodeCoverage YES -destination "platform=iOS Simulator,OS=15.4,name=iPhone 11" VAULT_URL="${{ secrets.VAULT_URL }}" CAVV_TEST_TOKEN="${{ secrets.CAVV_TEST_TOKEN }}" PULL_FUNDS_INTEGRATION_CONNECTION_URL="${{ secrets.PULL_FUNDS_INTEGRATION_CONNECTION_URL }}" CVV_INTEGRATION_PATH="${{ secrets.CVV_INTEGRATION_PATH }}" CVV_INTEGRATION_CONNECTION_URL="${{ secrets.CVV_INTEGRATION_CONNECTION_URL }}" CONNECTION_URL="${{ secrets.CONNECTION_URL }}" TEST_EXPIRATION_DATE_TOKEN="${{ secrets.TEST_EXPIRATION_DATE_TOKEN }}" TEST_CARD_NUMBER="${{ secrets.TEST_CARD_NUMBER }}" TEST_SKYFLOW_ID1="${{ secrets.TEST_SKYFLOW_ID1 }}" TEST_SKYFLOW_ID2="${{ secrets.TEST_SKYFLOW_ID2 }}" TEST_SKYFLOW_ID3="${{ secrets.TEST_SKYFLOW_ID3 }}" TEST_SKYFLOW_ID4="${{ secrets.TEST_SKYFLOW_ID4 }}" DETOKENIZE_TEST_TOKEN="${{ secrets.DETOKENIZE_TEST_TOKEN }}" DETOKENIZE_TEST_VALUE="${{ secrets.DETOKENIZE_TEST_VALUE }}" TOKEN_ENDPOINT="${{ secrets.TOKEN_ENDPOINT }}" PULL_FUNDS_INTEGRATION_ID="${{ secrets.PULL_FUNDS_INTEGRATION_ID }}" VISA_BASIC_AUTH="${{ secrets.VISA_BASIC_AUTH }}" CVV_INTEGRATION_ID="${{ secrets.CVV_INTEGRATION_ID }}" VAULT_ID="${{ secrets.VAULT_ID }}" -quiet

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
        
    - name: Upload SARIF Results
      uses: actions/upload-artifact@v2
      with:
        name: sarif-results
        path: /home/runner/work/skyflow-iOS/results/swift.sarif
